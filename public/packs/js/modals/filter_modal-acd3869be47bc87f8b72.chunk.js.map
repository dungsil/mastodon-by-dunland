{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/filters/select_filter.js","webpack:///./app/javascript/mastodon/features/filters/added_to_filter.js","webpack:///./app/javascript/mastodon/features/ui/components/filter_modal.js"],"names":["messages","defineMessages","search","clear","SelectFilter","connect","state","contextType","filters","Array","from","get","values","map","filter","keyword","join","Date","includes","toServerSideType","injectIntl","React","PureComponent","searchValue","renderItem","warning","className","id","defaultMessage","role","tabIndex","data-index","onClick","this","handleItemClick","onKeyDown","handleKeyDown","handleSearchChange","target","setState","value","setListRef","c","listNode","e","index","childNodes","findIndex","node","currentTarget","element","key","click","firstChild","lastChild","shiftKey","focus","preventDefault","stopPropagation","handleSearchKeyDown","handleClear","getAttribute","props","onSelectFilter","handleNewFilterClick","onNewFilter","fuzzysort","go","keys","limit","threshold","result","obj","renderCreateNew","name","fixedWidth","render","intl","isSearching","results","Fragment","type","onChange","placeholder","formatMessage","autoFocus","disabled","aria-label","deleteIcon","loupeIcon","ref","AddedToFilter","filterId","getIn","handleCloseClick","onClose","expiredMessage","contextMismatchMessage","settings_link","href","title","close","FilterModal","undefined","ImmutablePureComponent","step","isSubmitting","isSubmitted","handleNewFilterSuccess","handleSelectFilter","handleSuccess","dispatch","statusId","fetchStatus","handleFail","handleNextStep","createFilterStatus","filter_id","status_id","handleNewFilter","createFilter","context","action","componentDidMount","fetchFilters","stepComponent","icon","size","propTypes","PropTypes","string","isRequired","func","object"],"mappings":"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","file":"js/modals/filter_modal-acd3869be47bc87f8b72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { toServerSideType } from 'mastodon/utils/filters';\nimport { loupeIcon, deleteIcon } from 'mastodon/utils/icons';\nimport Icon from 'mastodon/components/icon';\nimport fuzzysort from 'fuzzysort';\n\nconst messages = defineMessages({\n  search: { id: 'filter_modal.select_filter.search', defaultMessage: 'Search or create' },\n  clear: { id: 'emoji_button.clear', defaultMessage: 'Clear' },\n});\n\nconst mapStateToProps = (state, { contextType }) => ({\n  filters: Array.from(state.get('filters').values()).map((filter) => [\n    filter.get('id'),\n    filter.get('title'),\n    filter.get('keywords')?.map((keyword) => keyword.get('keyword')).join('\\n'),\n    filter.get('expires_at') && filter.get('expires_at') < new Date(),\n    contextType && !filter.get('context').includes(toServerSideType(contextType)),\n  ]),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass SelectFilter extends React.PureComponent {\n\n  static propTypes = {\n    onSelectFilter: PropTypes.func.isRequired,\n    onNewFilter: PropTypes.func.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    searchValue: '',\n  };\n\n  search () {\n    const { filters } = this.props;\n    const { searchValue } = this.state;\n\n    if (searchValue === '') {\n      return filters;\n    }\n\n    return fuzzysort.go(searchValue, filters, {\n      keys: ['1', '2'],\n      limit: 5,\n      threshold: -10000,\n    }).map(result => result.obj);\n  }\n\n  renderItem = filter => {\n    let warning = null;\n    if (filter[3] || filter[4]) {\n      warning = (\n        <span className='language-dropdown__dropdown__results__item__common-name'>\n          (\n          {filter[3] && <FormattedMessage id='filter_modal.select_filter.expired' defaultMessage='expired' />}\n          {filter[3] && filter[4] && ', '}\n          {filter[4] && <FormattedMessage id='filter_modal.select_filter.context_mismatch' defaultMessage='does not apply to this context' />}\n          )\n        </span>\n      );\n    }\n\n    return (\n      <div key={filter[0]} role='button' tabIndex='0' data-index={filter[0]} className='language-dropdown__dropdown__results__item' onClick={this.handleItemClick} onKeyDown={this.handleKeyDown}>\n        <span className='language-dropdown__dropdown__results__item__native-name'>{filter[1]}</span> {warning}\n      </div>\n    );\n  }\n\n  renderCreateNew (name) {\n    return (\n      <div key='add-new-filter' role='button' tabIndex='0' className='language-dropdown__dropdown__results__item' onClick={this.handleNewFilterClick} onKeyDown={this.handleKeyDown}>\n        <Icon id='plus' fixedWidth /> <FormattedMessage id='filter_modal.select_filter.prompt_new' defaultMessage='New category: {name}' values={{ name }} />\n      </div>\n    );\n  }\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchValue: target.value });\n  }\n\n  setListRef = c => {\n    this.listNode = c;\n  }\n\n  handleKeyDown = e => {\n    const index = Array.from(this.listNode.childNodes).findIndex(node => node === e.currentTarget);\n\n    let element = null;\n\n    switch(e.key) {\n    case ' ':\n    case 'Enter':\n      e.currentTarget.click();\n      break;\n    case 'ArrowDown':\n      element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      } else {\n        element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.listNode.firstChild;\n      break;\n    case 'End':\n      element = this.listNode.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  handleSearchKeyDown = e => {\n    let element = null;\n\n    switch(e.key) {\n    case 'Tab':\n    case 'ArrowDown':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        element.focus();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      break;\n    }\n  }\n\n  handleClear = () => {\n    this.setState({ searchValue: '' });\n  }\n\n  handleItemClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onSelectFilter(value);\n  }\n\n  handleNewFilterClick = e => {\n    e.preventDefault();\n\n    this.props.onNewFilter(this.state.searchValue);\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    const { searchValue } = this.state;\n    const isSearching = searchValue !== '';\n    const results = this.search();\n\n    return (\n      <React.Fragment>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.select_filter.title' defaultMessage='Filter this post' /></h3>\n        <p className='report-dialog-modal__lead'><FormattedMessage id='filter_modal.select_filter.subtitle' defaultMessage='Use an existing category or create a new one' /></p>\n\n        <div className='emoji-mart-search'>\n          <input type='search' value={searchValue} onChange={this.handleSearchChange} onKeyDown={this.handleSearchKeyDown} placeholder={intl.formatMessage(messages.search)} autoFocus />\n          <button type='button' className='emoji-mart-search-icon' disabled={!isSearching} aria-label={intl.formatMessage(messages.clear)} onClick={this.handleClear}>{!isSearching ? loupeIcon : deleteIcon}</button>\n        </div>\n\n        <div className='language-dropdown__dropdown__results emoji-mart-scroll' role='listbox' ref={this.setListRef}>\n          {results.map(this.renderItem)}\n          {isSearching && this.renderCreateNew(searchValue) }\n        </div>\n\n      </React.Fragment>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage } from 'react-intl';\nimport { toServerSideType } from 'mastodon/utils/filters';\nimport Button from 'mastodon/components/button';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state, { filterId }) => ({\n  filter: state.getIn(['filters', filterId]),\n});\n\nexport default @connect(mapStateToProps)\nclass AddedToFilter extends React.PureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    contextType: PropTypes.string,\n    filter: ImmutablePropTypes.map.isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleCloseClick = () => {\n    const { onClose } = this.props;\n    onClose();\n  };\n\n  render () {\n    const { filter, contextType } = this.props;\n\n    let expiredMessage = null;\n    if (filter.get('expires_at') && filter.get('expires_at') < new Date()) {\n      expiredMessage = (\n        <React.Fragment>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.expired_title' defaultMessage='Expired filter!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.expired_explanation'\n              defaultMessage='This filter category has expired, you will need to change the expiration date for it to apply.'\n            />\n          </p>\n        </React.Fragment>\n      );\n    }\n\n    let contextMismatchMessage = null;\n    if (contextType && !filter.get('context').includes(toServerSideType(contextType))) {\n      contextMismatchMessage = (\n        <React.Fragment>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.context_mismatch_title' defaultMessage='Context mismatch!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.context_mismatch_explanation'\n              defaultMessage='This filter category does not apply to the context in which you have accessed this post. If you want the post to be filtered in this context too, you will have to edit the filter.'\n            />\n          </p>\n        </React.Fragment>\n      );\n    }\n\n    const settings_link = (\n      <a href={`/filters/${filter.get('id')}/edit`}>\n        <FormattedMessage\n          id='filter_modal.added.settings_link'\n          defaultMessage='settings page'\n        />\n      </a>\n    );\n\n    return (\n      <React.Fragment>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.added.title' defaultMessage='Filter added!' /></h3>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.short_explanation'\n            defaultMessage='This post has been added to the following filter category: {title}.'\n            values={{ title: filter.get('title') }}\n          />\n        </p>\n\n        {expiredMessage}\n        {contextMismatchMessage}\n\n        <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.review_and_configure_title' defaultMessage='Filter settings' /></h4>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.review_and_configure'\n            defaultMessage='To review and further configure this filter category, go to the {settings_link}.'\n            values={{ settings_link }}\n          />\n        </p>\n\n        <div className='flex-spacer' />\n\n        <div className='report-dialog-modal__actions'>\n          <Button onClick={this.handleCloseClick}><FormattedMessage id='report.close' defaultMessage='Done' /></Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStatus } from 'mastodon/actions/statuses';\nimport { fetchFilters, createFilter, createFilterStatus } from 'mastodon/actions/filters';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport IconButton from 'mastodon/components/icon_button';\nimport SelectFilter from 'mastodon/features/filters/select_filter';\nimport AddedToFilter from 'mastodon/features/filters/added_to_filter';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nexport default @connect(undefined)\n@injectIntl\nclass FilterModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    contextType: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    step: 'select',\n    filterId: null,\n    isSubmitting: false,\n    isSubmitted: false,\n  };\n\n  handleNewFilterSuccess = (result) => {\n    this.handleSelectFilter(result.id);\n  };\n\n  handleSuccess = () => {\n    const { dispatch, statusId } = this.props;\n    dispatch(fetchStatus(statusId, true));\n    this.setState({ isSubmitting: false, isSubmitted: true, step: 'submitted' });\n  };\n\n  handleFail = () => {\n    this.setState({ isSubmitting: false });\n  };\n\n  handleNextStep = step => {\n    this.setState({ step });\n  };\n\n  handleSelectFilter = (filterId) => {\n    const { dispatch, statusId } = this.props;\n\n    this.setState({ isSubmitting: true, filterId });\n\n    dispatch(createFilterStatus({\n      filter_id: filterId,\n      status_id: statusId,\n    }, this.handleSuccess, this.handleFail));\n  };\n\n  handleNewFilter = (title) => {\n    const { dispatch } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    dispatch(createFilter({\n      title,\n      context: ['home', 'notifications', 'public', 'thread', 'account'],\n      action: 'warn',\n    }, this.handleNewFilterSuccess, this.handleFail));\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n\n    dispatch(fetchFilters());\n  }\n\n  render () {\n    const {\n      intl,\n      statusId,\n      contextType,\n      onClose,\n    } = this.props;\n\n    const {\n      step,\n      filterId,\n    } = this.state;\n\n    let stepComponent;\n\n    switch(step) {\n    case 'select':\n      stepComponent = (\n        <SelectFilter\n          contextType={contextType}\n          onSelectFilter={this.handleSelectFilter}\n          onNewFilter={this.handleNewFilter}\n        />\n      );\n      break;\n    case 'create':\n      stepComponent = null;\n      break;\n    case 'submitted':\n      stepComponent = (\n        <AddedToFilter\n          contextType={contextType}\n          filterId={filterId}\n          statusId={statusId}\n          onClose={onClose}\n        />\n      );\n    }\n\n    return (\n      <div className='modal-root__modal report-dialog-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={20} />\n          <FormattedMessage id='filter_modal.title.status' defaultMessage='Filter a post' />\n        </div>\n\n        <div className='report-dialog-modal__container'>\n          {stepComponent}\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}