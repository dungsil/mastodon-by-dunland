{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/list_editor/components/account.js","webpack:///./app/javascript/mastodon/features/list_editor/components/search.js","webpack:///./app/javascript/mastodon/features/list_editor/components/edit_list_form.js","webpack:///./app/javascript/mastodon/features/list_editor/index.js"],"names":["messages","defineMessages","remove","add","Account","connect","getAccount","makeGetAccount","state","accountId","added","account","getIn","includes","dispatch","onRemove","removeFromListEditor","onAdd","addToListEditor","injectIntl","ImmutablePureComponent","render","intl","this","props","button","icon","title","formatMessage","onClick","className","size","propTypes","ImmutablePropTypes","map","isRequired","PropTypes","object","func","bool","defaultProps","search","Search","value","onSubmit","fetchListSuggestions","onClear","clearListSuggestions","onChange","changeListSuggestions","React","PureComponent","handleChange","e","target","handleKeyUp","keyCode","handleClear","hasValue","length","style","display","type","onKeyUp","placeholder","role","tabIndex","id","classNames","active","aria-label","ListForm","disabled","changeListEditorTitle","submitListEditor","handleSubmit","preventDefault","handleClick","ListEditor","accountIds","searchAccountIds","onInitialize","listId","setupListEditor","onReset","resetListEditor","componentDidMount","componentWillUnmount","showSearch","defaultStyle","x","spring","stiffness","damping","transform","visibility","string","onClose","list"],"mappings":"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","file":"js/features/list_editor-f1efadad8175929492b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from '../../../selectors';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\nexport default @connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nclass Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { account, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <div className='account__display-name'>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  search: { id: 'lists.search', defaultMessage: 'Search among people you follow' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass Search extends React.PureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleKeyUp = e => {\n    if (e.keyCode === 13) {\n      this.props.onSubmit(this.props.value);\n    }\n  }\n\n  handleClear = () => {\n    this.props.onClear();\n  }\n\n  render () {\n    const { value, intl } = this.props;\n    const hasValue = value.length > 0;\n\n    return (\n      <div className='list-editor__search search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.search)}</span>\n\n          <input\n            className='search__input'\n            type='text'\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            placeholder={intl.formatMessage(messages.search)}\n          />\n        </label>\n\n        <div role='button' tabIndex='0' className='search__icon' onClick={this.handleClear}>\n          <Icon id='search' className={classNames({ active: !hasValue })} />\n          <Icon id='times-circle' aria-label={intl.formatMessage(messages.search)} className={classNames({ active: hasValue })} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  title: { id: 'lists.edit.submit', defaultMessage: 'Change title' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: !state.getIn(['listEditor', 'isChanged']) || !state.getIn(['listEditor', 'title']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(false)),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass ListForm extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  }\n\n  handleClick = () => {\n    this.props.onSubmit();\n  }\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <input\n          className='setting-text'\n          value={value}\n          onChange={this.handleChange}\n        />\n\n        <IconButton\n          disabled={disabled}\n          icon='check'\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Account from './components/account';\nimport Search from './components/search';\nimport EditListForm from './components/edit_list_form';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex='-1' className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}