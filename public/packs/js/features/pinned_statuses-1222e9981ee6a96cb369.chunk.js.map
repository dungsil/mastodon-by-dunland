{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/pinned_statuses/index.js"],"names":["messages","defineMessages","heading","PinnedStatuses","connect","state","statusIds","getIn","hasMore","injectIntl","ImmutablePureComponent","handleHeaderClick","this","column","scrollTop","setRef","c","componentWillMount","props","dispatch","fetchPinnedStatuses","render","intl","multiColumn","bindToDocument","icon","formatMessage","ref","scrollKey","name","content","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool"],"mappings":"6QAYA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,iDAMN,IAIGC,EAFUC,mBALQC,IAAK,CAC3BC,UAAWD,EAAME,MAAM,CAAC,eAAgB,OAAQ,UAChDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,OAAQ,YAGV,GACvCE,cAAU,EADI,cAEcC,IAAwB,cAAD,yBAclDC,kBAAoB,KAClBC,KAAKC,OAAOC,aACb,KAEDC,OAASC,IACPJ,KAAKC,OAASG,GAThBC,qBACEL,KAAKM,MAAMC,SAASC,eAWtBC,SACE,MAAM,KAAEC,EAAI,UAAEhB,EAAS,QAAEE,EAAO,YAAEe,GAAgBX,KAAKM,MAEvD,OACE,kBAAC,IAAM,CAACM,gBAAiBD,EAAaE,KAAK,aAAavB,QAASoB,EAAKI,cAAc1B,EAASE,SAAUyB,IAAKf,KAAKG,QAC/G,YAAC,IAAoB,IACrB,YAAC,IAAU,CACTT,UAAWA,EACXsB,UAAU,kBACVpB,QAASA,EACTgB,gBAAiBD,IAEnB,YAAC,IAAM,UACL,oBAAMM,KAAK,SAASC,QAAQ,iBAjC7BC,UAAY,CACjBZ,SAAUa,IAAUC,KAAKC,WACzB5B,UAAW6B,IAAmBC,KAAKF,WACnCZ,KAAMU,IAAUK,OAAOH,WACvB1B,QAASwB,IAAUM,KAAKJ,WACxBX,YAAaS,IAAUM,MARhB,EASR","file":"js/features/pinned_statuses-1222e9981ee6a96cb369.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { Helmet } from 'react-helmet';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned post' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'pins', 'items']),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  render () {\n    const { intl, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          bindToDocument={!multiColumn}\n        />\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}