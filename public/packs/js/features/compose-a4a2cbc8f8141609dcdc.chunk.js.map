{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/compose/components/search_results.js","webpack:///./app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///./app/javascript/mastodon/features/compose/index.js"],"names":["messages","defineMessages","dismissSuggestion","SearchResults","injectIntl","ImmutablePureComponent","handleLoadMoreAccounts","this","props","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","componentDidMount","searchTerm","fetchSuggestions","componentDidUpdate","render","intl","results","suggestions","isEmpty","className","id","fixedWidth","defaultMessage","map","suggestion","get","actionIcon","actionTitle","formatMessage","onActionClick","accounts","statuses","hashtags","count","size","accountId","visible","onClick","statusId","searchEnabled","startsWith","includes","hashtag","values","propTypes","ImmutablePropTypes","isRequired","list","PropTypes","func","string","object","connect","state","getIn","dispatch","type","account","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","ownProps","columns","showSearch","multiColumn","React","PureComponent","handleLogoutClick","e","preventDefault","stopPropagation","openModal","message","confirm","closeWhenConfirm","onConfirm","logOut","onFocus","changeComposing","onBlur","mountCompose","componentWillUnmount","unmountCompose","role","aria-label","Link","to","title","some","column","href","onClose","alt","draggable","src","mascot","elephantUIPlane","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","Helmet","name","content"],"mappings":"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","file":"js/features/compose-a4a2cbc8f8141609dcdc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\nimport { searchEnabled } from '../../../initial_state';\nimport LoadMore from 'mastodon/components/load_more';\n\nconst messages = defineMessages({\n  dismissSuggestion: { id: 'suggestions.dismiss', defaultMessage: 'Dismiss suggestion' },\n});\n\nexport default @injectIntl\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    suggestions: ImmutablePropTypes.list.isRequired,\n    fetchSuggestions: PropTypes.func.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    dismissSuggestion: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { intl, results, suggestions, dismissSuggestion, searchTerm } = this.props;\n\n    if (searchTerm === '' && !suggestions.isEmpty()) {\n      return (\n        <div className='search-results'>\n          <div className='trends'>\n            <div className='trends__header'>\n              <Icon id='user-plus' fixedWidth />\n              <FormattedMessage id='suggestions.header' defaultMessage='You might be interested inâ€¦' />\n            </div>\n\n            {suggestions && suggestions.map(suggestion => (\n              <AccountContainer\n                key={suggestion.get('account')}\n                id={suggestion.get('account')}\n                actionIcon={suggestion.get('source') === 'past_interactions' ? 'times' : null}\n                actionTitle={suggestion.get('source') === 'past_interactions' ? intl.formatMessage(messages.dismissSuggestion) : null}\n                onActionClick={dismissSuggestion}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    let accounts, statuses, hashtags;\n    let count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count   += results.get('accounts').size;\n      accounts = (\n        <div className='search-results__section'>\n          <h5><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='People' /></h5>\n\n          {results.get('accounts').map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n\n          {results.get('accounts').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </div>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count   += results.get('statuses').size;\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          {results.get('statuses').map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n\n          {results.get('statuses').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </div>\n      );\n    } else if(results.get('statuses') && results.get('statuses').size === 0 && !searchEnabled && !(searchTerm.startsWith('@') || searchTerm.startsWith('#') || searchTerm.includes(' '))) {\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          <div className='search-results__info'>\n            <FormattedMessage id='search_results.statuses_fts_disabled' defaultMessage='Searching posts by their content is not enabled on this Mastodon server.' />\n          </div>\n        </div>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = (\n        <div className='search-results__section'>\n          <h5><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></h5>\n\n          {results.get('hashtags').map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n\n          {results.get('hashtags').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </div>\n      );\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='search_results.total' defaultMessage='{count, number} {count, plural, one {result} other {results}}' values={{ count }} />\n        </div>\n\n        {accounts}\n        {statuses}\n        {hashtags}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport SearchResults from '../components/search_results';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\nimport { expandSearch } from 'mastodon/actions/search';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React from 'react';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport SearchContainer from './containers/search_container';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport SearchResultsContainer from './containers/search_results_container';\nimport { openModal } from 'mastodon/actions/modal';\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { mascot } from '../../initial_state';\nimport Icon from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\nimport Column from 'mastodon/components/column';\nimport { Helmet } from 'react-helmet';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Compose extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      closeWhenConfirm: false,\n      onConfirm: () => logOut(),\n    }));\n\n    return false;\n  }\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  }\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  }\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' fixedWidth /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <NavigationContainer onClose={this.onBlur} />\n\n              <ComposeFormContainer />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResultsContainer />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <NavigationContainer onClose={this.onBlur} />\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}